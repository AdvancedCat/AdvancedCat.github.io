<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Flying my idea</title>
  
  <subtitle>Welcome to my sweet home</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-10-31T08:52:55.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Xin Hong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Javascript计算精度问题</title>
    <link href="http://yoursite.com/2017/10/29/Javascript%E8%AE%A1%E7%AE%97%E7%B2%BE%E5%BA%A6%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2017/10/29/Javascript计算精度问题/</id>
    <published>2017-10-29T07:01:45.000Z</published>
    <updated>2017-10-31T08:52:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>Javascript是弱类型语言，在进行浮点数计算时会有误差出现（这在很多语言中都是存在的，只是其他语言内部会去规避误差风险）。如果系统中有较多的浮点数计算步骤且对计算结果有准确度要求，则需要手动书写代码去规避。如下：</p><p><img src="http://upload-images.jianshu.io/upload_images/280956-0e24421bc8f4c197.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>解决的主要思路是将浮点数转换为整数进行计算，然后再转换为正确结果。</p><h2 id="双数四则运算"><a href="#双数四则运算" class="headerlink" title="双数四则运算"></a>双数四则运算</h2><p>以下代码可以参考：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//加法函数</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">accAdd</span>(<span class="params">arg1,arg2</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> r1,r2,m;</div><div class="line">    <span class="keyword">try</span>&#123;r1=arg1.toString().split(<span class="string">"."</span>)[<span class="number">1</span>].length&#125;<span class="keyword">catch</span>(e)&#123;r1=<span class="number">0</span>&#125;</div><div class="line">    <span class="keyword">try</span>&#123;r2=arg2.toString().split(<span class="string">"."</span>)[<span class="number">1</span>].length&#125;<span class="keyword">catch</span>(e)&#123;r2=<span class="number">0</span>&#125;</div><div class="line">    m=<span class="built_in">Math</span>.pow(<span class="number">10</span>,<span class="built_in">Math</span>.max(r1,r2));</div><div class="line">    <span class="keyword">return</span> (arg1*m+arg2*m)/m;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//减法函数</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">accSub</span>(<span class="params">arg1,arg2</span>)</span>&#123;</div><div class="line">     <span class="keyword">var</span> r1,r2,m,n;</div><div class="line">     <span class="keyword">try</span>&#123;r1=arg1.toString().split(<span class="string">"."</span>)[<span class="number">1</span>].length&#125;<span class="keyword">catch</span>(e)&#123;r1=<span class="number">0</span>&#125;</div><div class="line">     <span class="keyword">try</span>&#123;r2=arg2.toString().split(<span class="string">"."</span>)[<span class="number">1</span>].length&#125;<span class="keyword">catch</span>(e)&#123;r2=<span class="number">0</span>&#125;</div><div class="line">     m=<span class="built_in">Math</span>.pow(<span class="number">10</span>,<span class="built_in">Math</span>.max(r1,r2));</div><div class="line">     <span class="comment">//last modify by deeka</span></div><div class="line">     <span class="comment">//动态控制精度长度</span></div><div class="line">     n=(r1&gt;=r2)?r1:r2;</div><div class="line">     <span class="keyword">return</span> ((arg1*m-arg2*m)/m).toFixed(n);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//乘法函数</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">accMul</span>(<span class="params">arg1,arg2</span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    <span class="keyword">var</span> m=<span class="number">0</span>,s1=arg1.toString(),s2=arg2.toString();</div><div class="line">    <span class="keyword">try</span>&#123;m+=s1.split(<span class="string">"."</span>)[<span class="number">1</span>].length&#125;<span class="keyword">catch</span>(e)&#123;&#125;</div><div class="line">    <span class="keyword">try</span>&#123;m+=s2.split(<span class="string">"."</span>)[<span class="number">1</span>].length&#125;<span class="keyword">catch</span>(e)&#123;&#125;</div><div class="line">    <span class="keyword">return</span> <span class="built_in">Number</span>(s1.replace(<span class="string">"."</span>,<span class="string">""</span>))*<span class="built_in">Number</span>(s2.replace(<span class="string">"."</span>,<span class="string">""</span>))/<span class="built_in">Math</span>.pow(<span class="number">10</span>,m);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//除法函数</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">accDiv</span>(<span class="params">arg1,arg2</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> t1=<span class="number">0</span>,t2=<span class="number">0</span>,r1,r2;</div><div class="line">    <span class="keyword">try</span>&#123;t1=arg1.toString().split(<span class="string">"."</span>)[<span class="number">1</span>].length&#125;<span class="keyword">catch</span>(e)&#123;&#125;</div><div class="line">    <span class="keyword">try</span>&#123;t2=arg2.toString().split(<span class="string">"."</span>)[<span class="number">1</span>].length&#125;<span class="keyword">catch</span>(e)&#123;&#125;</div><div class="line">    <span class="keyword">with</span>(<span class="built_in">Math</span>)&#123;</div><div class="line">r1=<span class="built_in">Number</span>(arg1.toString().replace(<span class="string">"."</span>,<span class="string">""</span>));</div><div class="line">r2=<span class="built_in">Number</span>(arg2.toString().replace(<span class="string">"."</span>,<span class="string">""</span>));</div><div class="line"><span class="keyword">return</span> accMul((r1/r2),pow(<span class="number">10</span>,t2-t1));</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 可以绑定至Number原型链上方便调用</span></div><div class="line"><span class="built_in">Number</span>.prototype.add = <span class="function"><span class="keyword">function</span>(<span class="params">arg</span>)</span>&#123;</div><div class="line"><span class="keyword">return</span> accAdd(<span class="keyword">this</span>,arg)</div><div class="line">&#125;</div><div class="line"><span class="built_in">Number</span>.prototype.sub = <span class="function"><span class="keyword">function</span>(<span class="params">arg</span>)</span>&#123;</div><div class="line"><span class="keyword">return</span> accSub(<span class="keyword">this</span>,arg)</div><div class="line">&#125;</div><div class="line"><span class="built_in">Number</span>.prototype.mul = <span class="function"><span class="keyword">function</span>(<span class="params">arg</span>)</span>&#123;</div><div class="line"><span class="keyword">return</span> accMul(<span class="keyword">this</span>,arg)</div><div class="line">&#125;</div><div class="line"><span class="built_in">Number</span>.prototype.div = <span class="function"><span class="keyword">function</span>(<span class="params">arg</span>)</span>&#123;</div><div class="line"><span class="keyword">return</span> accDiv(<span class="keyword">this</span>,arg)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(<span class="string">'0.1+0.2='</span>,(<span class="number">0.1</span>).add(<span class="number">0.2</span>))</div><div class="line"><span class="built_in">console</span>.log(<span class="string">'10.3-9.2='</span>,(<span class="number">10.3</span>).sub(<span class="number">9.2</span>))</div><div class="line"><span class="built_in">console</span>.log(<span class="string">'8.1*0.7='</span>,(<span class="number">8.1</span>).mul(<span class="number">0.7</span>))</div><div class="line"><span class="built_in">console</span>.log(<span class="string">'0.21/0.7='</span>,(<span class="number">0.21</span>).div(<span class="number">0.7</span>))</div></pre></td></tr></table></figure><h2 id="多数据三则运算"><a href="#多数据三则运算" class="headerlink" title="多数据三则运算"></a>多数据三则运算</h2><p>以下代码仅列出了三则运算：加减乘。并未列出除法运算，因为除法本身具有特殊性，无法保证所得结果一定是除的尽的。 </p><p>会用到的工具函数：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 获得数据的小数部分 2.25 -&gt; 25</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getDecimals</span>(<span class="params">num</span>)</span>&#123;</div><div class="line"><span class="keyword">if</span>(num == <span class="keyword">void</span> <span class="number">0</span>)&#123;</div><div class="line"><span class="keyword">return</span> <span class="string">''</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> arr = (<span class="string">''</span>+num).split(<span class="string">'.'</span>)</div><div class="line"><span class="keyword">return</span> (arr.length &gt; <span class="number">1</span> ? arr[<span class="number">1</span>] : <span class="string">''</span>)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 获得一列数中小数点后位数的最大值  [0.25, 6.2598] -&gt; 4  </span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getMaxDecimalBits</span>(<span class="params">args</span>)</span>&#123;</div><div class="line"><span class="keyword">var</span> i, m = <span class="number">0</span>, len, t</div><div class="line"></div><div class="line"><span class="keyword">if</span>( !args || !args.length) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line"></div><div class="line">len = args.length</div><div class="line"></div><div class="line"><span class="keyword">for</span>( i = <span class="number">0</span>; i &lt; len; i++)&#123;</div><div class="line">t = getDecimals(args[i]).length</div><div class="line">m = t &gt; m ? t : m</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">return</span> m</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>算法思想都是一致的，取得一列数中小数点位数最大数，各乘以最大公因子。再对最后的结果进行处理。</p><h3 id="加法"><a href="#加法" class="headerlink" title="加法"></a>加法</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">addNum</span>(<span class="params"></span>)</span>&#123;</div><div class="line"><span class="keyword">var</span> args = [].slice.call(<span class="built_in">arguments</span>),</div><div class="line">len = args.length,</div><div class="line">result = <span class="number">0</span>,</div><div class="line">m = <span class="number">0</span>, i, factor</div><div class="line"></div><div class="line"><span class="keyword">if</span>(!len) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line"></div><div class="line">m = getMaxDecimalBits(args)</div><div class="line">factor = <span class="built_in">Math</span>.pow(<span class="number">10</span>, m)</div><div class="line"></div><div class="line"><span class="keyword">for</span>( i = <span class="number">0</span>; i &lt; len; i++)&#123;</div><div class="line">result+=(args[i] * factor)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">return</span> result / factor</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="减法"><a href="#减法" class="headerlink" title="减法"></a>减法</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">subNum</span>(<span class="params"></span>)</span>&#123;</div><div class="line"><span class="keyword">var</span> args = [].slice.call(<span class="built_in">arguments</span>),</div><div class="line">len = args.length,</div><div class="line">result, m, i, factor</div><div class="line"></div><div class="line"><span class="keyword">if</span>(!len) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line"></div><div class="line">m = getMaxDecimalBits(args)</div><div class="line">factor = <span class="built_in">Math</span>.pow(<span class="number">10</span>, m)</div><div class="line"></div><div class="line">result = args[<span class="number">0</span>] * factor</div><div class="line"><span class="keyword">for</span>( i=<span class="number">1</span>; i&lt;len; i++)&#123;</div><div class="line">result -= (args[i] * factor)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">return</span> result / factor</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="乘法"><a href="#乘法" class="headerlink" title="乘法"></a>乘法</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">multiNum</span>(<span class="params"></span>)</span>&#123;</div><div class="line"><span class="keyword">var</span> args = [].slice.call(<span class="built_in">arguments</span>),</div><div class="line">len = args.length,</div><div class="line">m, factor, i, result = <span class="number">1</span></div><div class="line"></div><div class="line"><span class="keyword">if</span>(!len) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line"></div><div class="line">m = getMaxDecimalBits(args)</div><div class="line">factor = <span class="built_in">Math</span>.pow(<span class="number">10</span>, m)</div><div class="line"></div><div class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;len; i++)&#123;</div><div class="line">result *= (args[i] * factor)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">return</span> result / <span class="built_in">Math</span>.pow(factor, len)</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Javascript是弱类型语言，在进行浮点数计算时会有误差出现（这在很多语言中都是存在的，只是其他语言内部会去规避误差风险）。如果系统中有较多的浮点数计算步骤且对计算结果有准确度要求，则需要手动书写代码去规避。如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upl
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>第一篇博客</title>
    <link href="http://yoursite.com/2017/03/01/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2017/03/01/第一篇博客/</id>
    <published>2017-03-01T15:25:05.000Z</published>
    <updated>2017-10-29T13:32:08.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>这是我的第一篇博客啦</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;测试&quot;&gt;&lt;a href=&quot;#测试&quot; class=&quot;headerlink&quot; title=&quot;测试&quot;&gt;&lt;/a&gt;测试&lt;/h1&gt;&lt;p&gt;这是我的第一篇博客啦&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>How to maintain HexoBlog</title>
    <link href="http://yoursite.com/2017/02/01/hello-world/"/>
    <id>http://yoursite.com/2017/02/01/hello-world/</id>
    <published>2017-02-01T02:00:00.000Z</published>
    <updated>2017-10-29T13:32:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
